# n <- soil_input$n[1]
# theta_sat <- soil_input$vwc_s[1]
# theta_res <- soil_input$vwc_r[1]
# theta_pwp <- soil_input$vwc_w[1]
# theta_fc <- soil_input$vwc_fc[1]
GEOtop_VisSoilWaterRet <- function(alpha, n, theta_sat, theta_res, theta_pwp, theta_fc, observed, add_ref_curves, pdf, accurate=10)
{
# soil water pressure head in centimeter
psi <- seq(1,10000000,accurate)
# volumetric soil water content in %
swc <- swc(psi = -psi, alpha = alpha, n = n, theta_sat = theta_sat, theta_res = theta_res) *100
if (pdf) pdf("./SoilWaterRetentionCurve.pdf")
op <- par(las=1, pty="s")
# swc vs. log(psi) = pF
if (!is.null(observed))
{
plot(x = observed[,2], y = observed[,1] *100, log="x", col = grey.colors(n = 1, start = .6, end = .6, alpha = .3),
ylab="", xlab="", bty="n", xaxt="n", yaxt="n",
ylim=c(0,60), xlim=c(1,10000000))
par(new=TRUE)
plot(psi, swc, type="l", xlab="pF", ylab="Soil Water Content  [volume %]", xaxt="n", log="x",
main=paste("SoilWaterRetentionCurve | alpha=", alpha, ", n=", n, ", res=", theta_res, ,sep=""), lwd=2,
ylim=c(0,60), xlim=c(1,10000000))
} else {
plot(psi, swc, type="l", xlab="pF", ylab="Soil Water Content  [volume %]", log="x", xaxt="n",
main=paste("SoilWaterRetentionCurve | alpha=", alpha, ", n=", n, sep=""),
ylim=c(0,60), xlim=c(1,10000000) )
}
if (add_ref_curves)
{
# add reference curves for clay, loam and sand
# source for vanGenuchten parameters: ROSETTA manual
swc_clay <- swc(psi = -psi, alpha = 0.015, n = 1.25, theta_sat = .459, theta_res = .098) *100
swc_loam <- swc(psi = -psi, alpha = 0.011, n = 1.47, theta_sat = .399, theta_res = .061) *100
swc_sand <- swc(psi = -psi, alpha = 0.035, n = 3.17, theta_sat = .375, theta_res = .029) *100
par(new=TRUE)
plot(psi, swc_clay, type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
col =  grey.colors(n = 1, start = .1, end = .3, alpha = .6), lty="dashed", lwd=1.2,
ylim=c(0,60), xlim=c(1,10000000) )
par(new=TRUE)
plot(psi, swc_loam, type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
col =  grey.colors(n = 1, start = .1, end = .3, alpha = .6), lty="dashed", lwd=1.2,
ylim=c(0,60), xlim=c(1,10000000) )
par(new=TRUE)
plot(psi, swc_sand, type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
col =  grey.colors(n = 1, start = .1, end = .3, alpha = .6), lty="dashed", lwd=1.2,
ylim=c(0,60), xlim=c(1,10000000) )
text(x = 1 , y = c(45.9,39.9,37.5)+.75, labels = c("clay","loam","sand"),
col=grey.colors(n = 1, start = .1, end = .3, alpha = .6))
#labels = c("clay (0.015,9.54)","loam (0.011,1.47)","sand (0.35,3.17)")
}
ticks <- c(0,1,2,3,4,5,7)
labels <- sapply(ticks, function(i) as.expression(i))
axis(1, at=c(1, 10, 100, 1000, 10000, 100000, 10000000), labels=labels)
abline(v=c(10^1.8,10^2.5,10^4.2), lty="dashed", col=grey.colors(n = 1, .8, .8, .5))
abline(h=c(theta_fc,theta_pwp,theta_res,theta_sat)*100,
col=c(rgb(1,0,0,.5),rgb(1,0,0,.75),grey.colors(n = 1, .8, .8, .5),grey.colors(n = 1, .8, .8, .5)), lty="dashed")
# text model soil parameter
text(x=max(psi), y=c(theta_fc,theta_pwp,theta_res,theta_sat)*100, labels = c("fc","pwp","res","sat"),
col=c(rgb(1,0,0,.75),rgb(1,0,0,.75),"grey30","grey30"))
# text theortical field capacity and permanent wilting point
text(x = c(10^2.15,10^4.2), y=61, labels = c("FC","PWP"), col="grey30")
text(x = c(10^1.8,10^2.5,10^4.2), y=-1, labels = c("1.8","2.5","4.2"), col="grey30")
legend(x=150000, y=60, legend = "estimation", col="black", lwd=3, bty="n")
if(!is.null(observed))
{
legend(x=260000, y=58, legend = "observed", col = grey.colors(n = 1, start = .6, end = .6, alpha = .3), bty = "n", pch = 1)
}
par(op)
if (pdf) dev.off()
return(NULL)
}
10^0.098
GEOtop_VisSoilWaterRet(alpha = 1.5, n=1.18, theta_sat = .52, theta_res = .08, theta_pwp = .15, theta_fc = .28, observed = data20_cleared, pdf = F,add_ref_curves = T, accurate = 10)
# visualize soil water retention curve and GEOtop model parameterization
# using swc function from soilwater
# data from point.RData (GEOtop_ReadMultiPoint)
# wpath="/run/user/1000/gvfs/smb-share:server=sdcalp01.eurac.edu,share=data2/Simulations/Simulation_GEOtop_1_225_ZH/Vinschgau/SimTraining/BrJ/HiResAlp/1D/Montecini_pnt_1_225_B2_003"
#
# wpath="/run/user/1000/gvfs/smb-share:server=sdcalp01.eurac.edu,share=data2/Simulations/Simulation_GEOtop_1_225_ZH/Vinschgau/SimTraining/BrJ/HiResAlp/1D/Montecini_pnt_1_225_P2_002/"
#
# library(geotopbricks)
# library(soilwater)
#
# soil_input <- get.geotop.inpts.keyword.value(keyword="SoilParFile", wpath=wpath, data.frame=TRUE)
#
# alpha <- soil_input$alpha[1]
# n <- soil_input$n[1]
# theta_sat <- soil_input$vwc_s[1]
# theta_res <- soil_input$vwc_r[1]
# theta_pwp <- soil_input$vwc_w[1]
# theta_fc <- soil_input$vwc_fc[1]
GEOtop_VisSoilWaterRet <- function(alpha, n, theta_sat, theta_res, theta_pwp, theta_fc, observed, add_ref_curves, pdf, accurate=10)
{
# soil water pressure head in centimeter
psi <- seq(1,10000000,accurate)
# volumetric soil water content in %
swc <- swc(psi = -psi, alpha = alpha, n = n, theta_sat = theta_sat, theta_res = theta_res) *100
if (pdf) pdf("./SoilWaterRetentionCurve.pdf")
op <- par(las=1, pty="s")
# swc vs. log(psi) = pF
if (!is.null(observed))
{
plot(x = observed[,2], y = observed[,1] *100, log="x", col = grey.colors(n = 1, start = .6, end = .6, alpha = .3),
ylab="", xlab="", bty="n", xaxt="n", yaxt="n",
ylim=c(0,60), xlim=c(1,10000000))
par(new=TRUE)
plot(psi, swc, type="l", xlab="pF", ylab="Soil Water Content  [volume %]", xaxt="n", log="x",
main=paste("SoilWaterRetentionCurve | alpha=", alpha, ", n=", n, ", res=", theta_res, ", sat=", theta_sat, sep=""), lwd=2,
ylim=c(0,60), xlim=c(1,10000000))
} else {
plot(psi, swc, type="l", xlab="pF", ylab="Soil Water Content  [volume %]", log="x", xaxt="n",
main=paste("SoilWaterRetentionCurve | alpha=", alpha, ", n=", n, sep=""),
ylim=c(0,60), xlim=c(1,10000000) )
}
if (add_ref_curves)
{
# add reference curves for clay, loam and sand
# source for vanGenuchten parameters: ROSETTA manual
swc_clay <- swc(psi = -psi, alpha = 0.015, n = 1.25, theta_sat = .459, theta_res = .098) *100
swc_loam <- swc(psi = -psi, alpha = 0.011, n = 1.47, theta_sat = .399, theta_res = .061) *100
swc_sand <- swc(psi = -psi, alpha = 0.035, n = 3.17, theta_sat = .375, theta_res = .029) *100
par(new=TRUE)
plot(psi, swc_clay, type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
col =  grey.colors(n = 1, start = .1, end = .3, alpha = .6), lty="dashed", lwd=1.2,
ylim=c(0,60), xlim=c(1,10000000) )
par(new=TRUE)
plot(psi, swc_loam, type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
col =  grey.colors(n = 1, start = .1, end = .3, alpha = .6), lty="dashed", lwd=1.2,
ylim=c(0,60), xlim=c(1,10000000) )
par(new=TRUE)
plot(psi, swc_sand, type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
col =  grey.colors(n = 1, start = .1, end = .3, alpha = .6), lty="dashed", lwd=1.2,
ylim=c(0,60), xlim=c(1,10000000) )
text(x = 1 , y = c(45.9,39.9,37.5)+.75, labels = c("clay","loam","sand"),
col=grey.colors(n = 1, start = .1, end = .3, alpha = .6))
#labels = c("clay (0.015,9.54)","loam (0.011,1.47)","sand (0.35,3.17)")
}
ticks <- c(0,1,2,3,4,5,7)
labels <- sapply(ticks, function(i) as.expression(i))
axis(1, at=c(1, 10, 100, 1000, 10000, 100000, 10000000), labels=labels)
abline(v=c(10^1.8,10^2.5,10^4.2), lty="dashed", col=grey.colors(n = 1, .8, .8, .5))
abline(h=c(theta_fc,theta_pwp,theta_res,theta_sat)*100,
col=c(rgb(1,0,0,.5),rgb(1,0,0,.75),grey.colors(n = 1, .8, .8, .5),grey.colors(n = 1, .8, .8, .5)), lty="dashed")
# text model soil parameter
text(x=max(psi), y=c(theta_fc,theta_pwp,theta_res,theta_sat)*100, labels = c("fc","pwp","res","sat"),
col=c(rgb(1,0,0,.75),rgb(1,0,0,.75),"grey30","grey30"))
# text theortical field capacity and permanent wilting point
text(x = c(10^2.15,10^4.2), y=61, labels = c("FC","PWP"), col="grey30")
text(x = c(10^1.8,10^2.5,10^4.2), y=-1, labels = c("1.8","2.5","4.2"), col="grey30")
legend(x=150000, y=60, legend = "estimation", col="black", lwd=3, bty="n")
if(!is.null(observed))
{
legend(x=260000, y=58, legend = "observed", col = grey.colors(n = 1, start = .6, end = .6, alpha = .3), bty = "n", pch = 1)
}
par(op)
if (pdf) dev.off()
return(NULL)
}
GEOtop_VisSoilWaterRet(alpha = 1.5, n=1.18, theta_sat = .52, theta_res = .08, theta_pwp = .15, theta_fc = .28, observed = data20_cleared, pdf = F,add_ref_curves = T, accurate = 10)
GEOtop_VisSoilWaterRet(alpha = 0.0021, n=1.4, theta_sat = .52, theta_res = .08, theta_pwp = .15, theta_fc = .28, observed = data20_cleared, pdf = F,add_ref_curves = T, accurate = 10)
GEOtop_VisSoilWaterRet(alpha = 0.0021, n=1.4, theta_sat = .51, theta_res = .06, theta_pwp = .15, theta_fc = .28, observed = data20_cleared, pdf = F,add_ref_curves = T, accurate = 10)
10^4.2
log(10^4.2)
GEOtop_VisSoilWaterRet(alpha = 0.0021, n=1.4, theta_sat = .51, theta_res = .06, theta_pwp = .15, theta_fc = .28, observed = data5_cleared, pdf = F,add_ref_curves = T, accurate = 10)
GEOtop_VisSoilWaterRet(alpha = 0.0021, n=1.4, theta_sat = .51, theta_res = .06, theta_pwp = .15, theta_fc = .28, observed = data5, pdf = F,add_ref_curves = T, accurate = 10)
source('~/GitHub/AnalyseGEOtop/R/GEOtop_VisSoilWaterRet.R', echo=TRUE)
GEOtop_VisSoilWaterRet(alpha = 0.0021, n=1.4, theta_sat = .51, theta_res = .06, theta_pwp = .15, theta_fc = .28, observed = data5, pdf = F,add_ref_curves = T, accurate = 10)
GEOtop_VisSoilWaterRet(alpha = 0.015, n=1.25, theta_sat = .46, theta_res = .10, theta_pwp = .15, theta_fc = .28, observed = data5, pdf = F,add_ref_curves = T, accurate = 10)
GEOtop_VisSoilWaterRet(alpha = 0.02, n=1.25, theta_sat = .46, theta_res = .09, theta_pwp = .15, theta_fc = .28, observed = data5, pdf = F,add_ref_curves = T, accurate = 10)
GEOtop_VisSoilWaterRet(alpha = 0.02, n=1.5, theta_sat = .46, theta_res = .09, theta_pwp = .15, theta_fc = .28, observed = data5, pdf = F,add_ref_curves = T, accurate = 10)
GEOtop_VisSoilWaterRet(alpha = 0.02, n=1.3, theta_sat = .46, theta_res = .09, theta_pwp = .15, theta_fc = .28, observed = data5, pdf = F,add_ref_curves = T, accurate = 10)
GEOtop_VisSoilWaterRet(alpha = 0.02, n=1.23, theta_sat = .46, theta_res = .09, theta_pwp = .15, theta_fc = .28, observed = data5, pdf = F,add_ref_curves = T, accurate = 10)
GEOtop_VisSoilWaterRet(alpha = 0.02, n=1.27, theta_sat = .46, theta_res = .09, theta_pwp = .15, theta_fc = .28, observed = data5, pdf = F,add_ref_curves = T, accurate = 10)
GEOtop_VisSoilWaterRet(alpha = 0.02, n=1.27, theta_sat = .46, theta_res = .09, theta_pwp = .15, theta_fc = .28, observed = data5, pdf = T,add_ref_curves = T, accurate = 10)
GEOtop_VisSoilWaterRet(alpha = 0.02, n=1.27, theta_sat = .46, theta_res = .09, theta_pwp = .15, theta_fc = .28, observed = data5, pdf = T,add_ref_curves = T, accurate = 1)
GEOtop_VisSoilWaterRet(alpha = 0.02, n=1.27, theta_sat = .46, theta_res = .09, theta_pwp = .15, theta_fc = .28, observed = data5, pdf = F,add_ref_curves = T, accurate = 10)
GEOtop_VisSoilWaterRet(alpha = 0.02, n=1.27, theta_sat = .46, theta_res = .09, theta_pwp = .17, theta_fc = .35, observed = data5, pdf = F,add_ref_curves = T, accurate = 10)
# visualize soil water retention curve and GEOtop model parameterization
# using swc function from soilwater
# data from point.RData (GEOtop_ReadMultiPoint)
# wpath="/run/user/1000/gvfs/smb-share:server=sdcalp01.eurac.edu,share=data2/Simulations/Simulation_GEOtop_1_225_ZH/Vinschgau/SimTraining/BrJ/HiResAlp/1D/Montecini_pnt_1_225_B2_003"
#
# wpath="/run/user/1000/gvfs/smb-share:server=sdcalp01.eurac.edu,share=data2/Simulations/Simulation_GEOtop_1_225_ZH/Vinschgau/SimTraining/BrJ/HiResAlp/1D/Montecini_pnt_1_225_P2_002/"
#
# library(geotopbricks)
# library(soilwater)
#
# soil_input <- get.geotop.inpts.keyword.value(keyword="SoilParFile", wpath=wpath, data.frame=TRUE)
#
# alpha <- soil_input$alpha[1]
# n <- soil_input$n[1]
# theta_sat <- soil_input$vwc_s[1]
# theta_res <- soil_input$vwc_r[1]
# theta_pwp <- soil_input$vwc_w[1]
# theta_fc <- soil_input$vwc_fc[1]
GEOtop_VisSoilWaterRet <- function(alpha, n, theta_sat, theta_res, theta_pwp, theta_fc, observed=FALSE, add_ref_curves=TRUE, pdf=TRUE, accurate=10)
{
# soil water pressure head in centimeter
psi <- seq(1,10000000,accurate)
# volumetric soil water content in %
swc <- swc(psi = -psi, alpha = alpha, n = n, theta_sat = theta_sat, theta_res = theta_res) *100
if (pdf) pdf("./SoilWaterRetentionCurve.pdf")
op <- par(las=1, pty="s")
# swc vs. log(psi) = pF
if (!is.null(observed))
{
plot(x = observed[,2], y = observed[,1] *100, log="x", col = grey.colors(n = 1, start = .6, end = .6, alpha = .3),
ylab="", xlab="", bty="n", xaxt="n", yaxt="n",
ylim=c(0,60), xlim=c(1,10000000))
par(new=TRUE)
plot(psi, swc, type="l", xlab="pF", ylab="Soil Water Content  [volume %]", xaxt="n", log="x", col=rgb(1,0,0,.75),
main=paste("SoilWaterRetentionCurve | alpha=", alpha, ", n=", n, ", res=", theta_res, ", sat=", theta_sat, sep=""), lwd=2,
ylim=c(0,60), xlim=c(1,10000000))
} else {
plot(psi, swc, type="l", xlab="pF", ylab="Soil Water Content  [volume %]", log="x", xaxt="n",  col=rgb(1,0,0,.75),
main=paste("SoilWaterRetentionCurve | alpha=", alpha, ", n=", n, sep=""),
ylim=c(0,60), xlim=c(1,10000000) )
}
if (add_ref_curves)
{
# add reference curves for clay, loam and sand
# source for vanGenuchten parameters: ROSETTA manual
swc_clay <- swc(psi = -psi, alpha = 0.015, n = 1.25, theta_sat = .459, theta_res = .098) *100
swc_loam <- swc(psi = -psi, alpha = 0.011, n = 1.47, theta_sat = .399, theta_res = .061) *100
swc_sand <- swc(psi = -psi, alpha = 0.035, n = 3.17, theta_sat = .375, theta_res = .029) *100
par(new=TRUE)
plot(psi, swc_clay, type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
col =  grey.colors(n = 1, start = .1, end = .3, alpha = .6), lty="dashed", lwd=1.2,
ylim=c(0,60), xlim=c(1,10000000) )
par(new=TRUE)
plot(psi, swc_loam, type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
col =  grey.colors(n = 1, start = .1, end = .3, alpha = .6), lty="dashed", lwd=1.2,
ylim=c(0,60), xlim=c(1,10000000) )
par(new=TRUE)
plot(psi, swc_sand, type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
col =  grey.colors(n = 1, start = .1, end = .3, alpha = .6), lty="dashed", lwd=1.2,
ylim=c(0,60), xlim=c(1,10000000) )
text(x = 1 , y = c(45.9,39.9,37.5)+.75, labels = c("clay","loam","sand"),
col=grey.colors(n = 1, start = .1, end = .3, alpha = .6))
#labels = c("clay (0.015,9.54)","loam (0.011,1.47)","sand (0.35,3.17)")
}
ticks <- c(0,1,2,3,4,5,7)
labels <- sapply(ticks, function(i) as.expression(i))
axis(1, at=c(1, 10, 100, 1000, 10000, 100000, 10000000), labels=labels)
abline(v=c(10^1.8,10^2.5,10^4.2), lty="dashed", col=grey.colors(n = 1, .8, .8, .5))
abline(h=c(theta_fc,theta_pwp,theta_res,theta_sat)*100,
col=c(rgb(1,0,0,.5),rgb(1,0,0,.75),grey.colors(n = 1, .8, .8, .5),grey.colors(n = 1, .8, .8, .5)), lty="dashed")
# text model soil parameter
text(x=max(psi), y=c(theta_fc,theta_pwp,theta_res,theta_sat)*100, labels = c("fc","pwp","res","sat"),
col=c(rgb(1,0,0,.75),rgb(1,0,0,.75),"grey30","grey30"))
# text theortical field capacity and permanent wilting point
text(x = c(10^2.15,10^4.2), y=61, labels = c("FC","PWP"), col="grey30")
text(x = c(10^1.8,10^2.5,10^4.2), y=-1, labels = c("1.8","2.5","4.2"), col="grey30")
legend(x=150000, y=60, legend = "estimation", col=rgb(1,0,0,.75),, lwd=3, bty="n")
if(!is.null(observed))
{
legend(x=260000, y=58, legend = "observed", col = grey.colors(n = 1, start = .6, end = .6, alpha = .3), bty = "n", pch = 1)
}
par(op)
if (pdf) dev.off()
return(NULL)
}
GEOtop_VisSoilWaterRet(alpha = 0.02, n=1.27, theta_sat = .46, theta_res = .09, theta_pwp = .17, theta_fc = .35, observed = data5, pdf = F,add_ref_curves = T, accurate = 10)
# visualize soil water retention curve and GEOtop model parameterization
# using swc function from soilwater
# data from point.RData (GEOtop_ReadMultiPoint)
# wpath="/run/user/1000/gvfs/smb-share:server=sdcalp01.eurac.edu,share=data2/Simulations/Simulation_GEOtop_1_225_ZH/Vinschgau/SimTraining/BrJ/HiResAlp/1D/Montecini_pnt_1_225_B2_003"
#
# wpath="/run/user/1000/gvfs/smb-share:server=sdcalp01.eurac.edu,share=data2/Simulations/Simulation_GEOtop_1_225_ZH/Vinschgau/SimTraining/BrJ/HiResAlp/1D/Montecini_pnt_1_225_P2_002/"
#
# library(geotopbricks)
# library(soilwater)
#
# soil_input <- get.geotop.inpts.keyword.value(keyword="SoilParFile", wpath=wpath, data.frame=TRUE)
#
# alpha <- soil_input$alpha[1]
# n <- soil_input$n[1]
# theta_sat <- soil_input$vwc_s[1]
# theta_res <- soil_input$vwc_r[1]
# theta_pwp <- soil_input$vwc_w[1]
# theta_fc <- soil_input$vwc_fc[1]
GEOtop_VisSoilWaterRet <- function(alpha, n, theta_sat, theta_res, theta_pwp, theta_fc, observed=FALSE, add_ref_curves=TRUE, pdf=TRUE, accurate=10)
{
# soil water pressure head in centimeter
psi <- seq(1,10000000,accurate)
# volumetric soil water content in %
swc <- swc(psi = -psi, alpha = alpha, n = n, theta_sat = theta_sat, theta_res = theta_res) *100
if (pdf) pdf("./SoilWaterRetentionCurve.pdf")
op <- par(las=1, pty="s")
# swc vs. log(psi) = pF
if (!is.null(observed))
{
plot(x = observed[,2], y = observed[,1] *100, log="x", col = grey.colors(n = 1, start = .6, end = .6, alpha = .3),
ylab="", xlab="", bty="n", xaxt="n", yaxt="n",
ylim=c(0,60), xlim=c(1,10000000))
par(new=TRUE)
plot(psi, swc, type="l", xlab="pF", ylab="Soil Water Content  [volume %]", xaxt="n", log="x",
main=paste("SoilWaterRetentionCurve | alpha=", alpha, ", n=", n, ", res=", theta_res, ", sat=", theta_sat, sep=""), lwd=2,
ylim=c(0,60), xlim=c(1,10000000))
} else {
plot(psi, swc, type="l", xlab="pF", ylab="Soil Water Content  [volume %]", log="x", xaxt="n",
main=paste("SoilWaterRetentionCurve | alpha=", alpha, ", n=", n, sep=""),
ylim=c(0,60), xlim=c(1,10000000) )
}
if (add_ref_curves)
{
# add reference curves for clay, loam and sand
# source for vanGenuchten parameters: ROSETTA manual
swc_clay <- swc(psi = -psi, alpha = 0.015, n = 1.25, theta_sat = .459, theta_res = .098) *100
swc_loam <- swc(psi = -psi, alpha = 0.011, n = 1.47, theta_sat = .399, theta_res = .061) *100
swc_sand <- swc(psi = -psi, alpha = 0.035, n = 3.17, theta_sat = .375, theta_res = .029) *100
par(new=TRUE)
plot(psi, swc_clay, type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
col =  grey.colors(n = 1, start = .1, end = .3, alpha = .6), lty="dashed", lwd=1.2,
ylim=c(0,60), xlim=c(1,10000000) )
par(new=TRUE)
plot(psi, swc_loam, type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
col =  grey.colors(n = 1, start = .1, end = .3, alpha = .6), lty="dashed", lwd=1.2,
ylim=c(0,60), xlim=c(1,10000000) )
par(new=TRUE)
plot(psi, swc_sand, type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
col =  grey.colors(n = 1, start = .1, end = .3, alpha = .6), lty="dashed", lwd=1.2,
ylim=c(0,60), xlim=c(1,10000000) )
text(x = 1 , y = c(45.9,39.9,37.5)+.75, labels = c("clay","loam","sand"),
col=grey.colors(n = 1, start = .1, end = .3, alpha = .6))
#labels = c("clay (0.015,9.54)","loam (0.011,1.47)","sand (0.35,3.17)")
}
ticks <- c(0,1,2,3,4,5,7)
labels <- sapply(ticks, function(i) as.expression(i))
axis(1, at=c(1, 10, 100, 1000, 10000, 100000, 10000000), labels=labels)
abline(v=c(10^1.8,10^2.5,10^4.2), lty="dashed", col=grey.colors(n = 1, .8, .8, .5))
abline(h=c(theta_fc,theta_pwp,theta_res,theta_sat)*100,
col=c(rgb(1,0,0,.5),rgb(1,0,0,.75),grey.colors(n = 1, .8, .8, .5),grey.colors(n = 1, .8, .8, .5)), lty="dashed")
# text model soil parameter
text(x=max(psi), y=c(theta_fc,theta_pwp,theta_res,theta_sat)*100, labels = c("fc","pwp","res","sat"),
col=c(rgb(1,0,0,.75),rgb(1,0,0,.75),"grey30","grey30"))
# text theortical field capacity and permanent wilting point
text(x = c(10^2.15,10^4.2), y=61, labels = c("FC","PWP"), col="grey30")
text(x = c(10^1.8,10^2.5,10^4.2), y=-1, labels = c("1.8","2.5","4.2"), col="grey30")
legend(x=150000, y=60, legend = "estimation", col="black", lwd=3, bty="n")
if(!is.null(observed))
{
legend(x=260000, y=58, legend = "observed", col = grey.colors(n = 1, start = .6, end = .6, alpha = .3), bty = "n", pch = 1)
}
par(op)
if (pdf) dev.off()
return(NULL)
}
GEOtop_VisSoilWaterRet(alpha = 0.02, n=1.27, theta_sat = .46, theta_res = .09, theta_pwp = .17, theta_fc = .35, observed = data5, pdf = F,add_ref_curves = T, accurate = 10)
GEOtop_VisSoilWaterRet(alpha = 0.02, n=1.27, theta_sat = .46, theta_res = .09, theta_pwp = .17, theta_fc = .35, observed = data5, pdf = T,add_ref_curves = T, accurate = 1)
GEOtop_VisSoilWaterRet(alpha = 0.02, n=1.27, theta_sat = .46, theta_res = .09, theta_pwp = .17, theta_fc = .35, observed = data20, pdf = T,add_ref_curves = T, accurate = 1)
GEOtop_VisSoilWaterRet(alpha = 0.02, n=1.27, theta_sat = .46, theta_res = .09, theta_pwp = .17, theta_fc = .35, observed = data20, pdf = F,add_ref_curves = T, accurate = 10)
x11()
GEOtop_VisSoilWaterRet(alpha = 0.02, n=1.27, theta_sat = .46, theta_res = .09, theta_pwp = .17, theta_fc = .35, observed = data20, pdf = F,add_ref_curves = T, accurate = 10)
GEOtop_VisSoilWaterRet(alpha = 0.011, n=1.47, theta_sat = .4, theta_res = .06, theta_pwp = .17, theta_fc = .35, observed = data20, pdf = F,add_ref_curves = T, accurate = 10)
GEOtop_VisSoilWaterRet(alpha = 0.011, n=1.4, theta_sat = .4, theta_res = .06, theta_pwp = .17, theta_fc = .35, observed = data20, pdf = F,add_ref_curves = T, accurate = 10)
GEOtop_VisSoilWaterRet(alpha = 0.011, n=1.5, theta_sat = .4, theta_res = .06, theta_pwp = .17, theta_fc = .35, observed = data20, pdf = F,add_ref_curves = T, accurate = 10)
GEOtop_VisSoilWaterRet(alpha = 0.015, n=1.5, theta_sat = .4, theta_res = .06, theta_pwp = .17, theta_fc = .35, observed = data20, pdf = F,add_ref_curves = T, accurate = 10)
GEOtop_VisSoilWaterRet(alpha = 0.015, n=1.6, theta_sat = .4, theta_res = .06, theta_pwp = .17, theta_fc = .35, observed = data20, pdf = F,add_ref_curves = T, accurate = 10)
GEOtop_VisSoilWaterRet(alpha = 0.011, n=1.6, theta_sat = .4, theta_res = .06, theta_pwp = .17, theta_fc = .35, observed = data20, pdf = F,add_ref_curves = T, accurate = 10)
GEOtop_VisSoilWaterRet(alpha = 0.02, n=1.6, theta_sat = .4, theta_res = .06, theta_pwp = .17, theta_fc = .35, observed = data20, pdf = F,add_ref_curves = T, accurate = 10)
GEOtop_VisSoilWaterRet(alpha = 0.02, n=1.4, theta_sat = .4, theta_res = .06, theta_pwp = .17, theta_fc = .35, observed = data20, pdf = F,add_ref_curves = T, accurate = 10)
GEOtop_VisSoilWaterRet(alpha = 0.02, n=1.5, theta_sat = .4, theta_res = .06, theta_pwp = .17, theta_fc = .35, observed = data20, pdf = F,add_ref_curves = T, accurate = 10)
GEOtop_VisSoilWaterRet(alpha = 0.02, n=1.3, theta_sat = .4, theta_res = .06, theta_pwp = .17, theta_fc = .35, observed = data20, pdf = F,add_ref_curves = T, accurate = 10)
GEOtop_VisSoilWaterRet(alpha = 0.02, n=1.35, theta_sat = .4, theta_res = .06, theta_pwp = .17, theta_fc = .35, observed = data20, pdf = F,add_ref_curves = T, accurate = 10)
GEOtop_VisSoilWaterRet(alpha = 0.02, n=1.37, theta_sat = .4, theta_res = .06, theta_pwp = .17, theta_fc = .35, observed = data20, pdf = F,add_ref_curves = T, accurate = 10)
GEOtop_VisSoilWaterRet(alpha = 0.02, n=1.37, theta_sat = .4, theta_res = .06, theta_pwp = .17, theta_fc = .35, observed = data20, pdf = T,add_ref_curves = T, accurate = 1)
GEOtop_VisSoilWaterRet(alpha = 0.02, n=1.37, theta_sat = .4, theta_res = .06, theta_pwp = .12, theta_fc = .28, observed = data20, pdf = F,add_ref_curves = T, accurate = 10)
GEOtop_VisSoilWaterRet(alpha = 0.02, n=1.37, theta_sat = .4, theta_res = .06, theta_pwp = .12, theta_fc = .28, observed = data20, pdf = F,add_ref_curves = T, accurate = 10)
x11()
GEOtop_VisSoilWaterRet(alpha = 0.02, n=1.37, theta_sat = .4, theta_res = .06, theta_pwp = .12, theta_fc = .28, observed = data20, pdf = F,add_ref_curves = T, accurate = 10)
GEOtop_VisSoilWaterRet(alpha = 0.02, n=1.37, theta_sat = .4, theta_res = .06, theta_pwp = .1, theta_fc = .28, observed = data20, pdf = F,add_ref_curves = T, accurate = 10)
GEOtop_VisSoilWaterRet(alpha = 0.02, n=1.37, theta_sat = .4, theta_res = .06, theta_pwp = .1, theta_fc = .28, observed = data20, pdf = T,add_ref_curves = T, accurate = 1)
library(DataBaseAlpEnvEURAC)
library(DataBaseAlpEnvEURAC)
dB_getGEOtop(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/M1", station = "M1", aggr_time = "h", file.name = "meteoM1.txt",
M1 <- dB_getGEOtop(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/M1", station = "M1", aggr_time = "h", file.name = "meteoM1.txt",
header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/header_M1.txt")
str(M1)
plot(M1)
plot(M1$SWglobal)
plot(M1$SWglobal, ylim=c(0,1000))
str(M1)
View(M1)
M1 <- dB_getGEOtop(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/M1", station = "M1", mkreg = T, aggr_time = "h", file.name = "meteoM1.txt",
header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/header_M1.txt")
data <- M1
head(index(data),1
)
library(zoo)
library(chron)
head(index(data),1)
tail(index(data),1)
g <- zoo(x = NA, seq(head(index(data),1),tail(index(data),1),by="15 min"))
g <- zoo(x = NA, seq(head(index(data),1),tail(index(data),1),by=1))
str(g)
time(g)[1:10]
g <- zoo(x = NA, seq(head(index(data),1),tail(index(data),1),by=1/24))
time(g)[1:10]
g <- zoo(x = NA, seq(head(index(data),1),tail(index(data),1),by=1/24/4))
str(g)
time(g)[1:10]
detach("package:DataBaseAlpEnvEURAC", unload=TRUE)
remove.packages("DataBaseAlpEnvEURAC", lib="~/R/x86_64-pc-linux-gnu-library/3.2")
library(devtools)
install_github("JBrenn/DataBaseAlpEnvEURAC")
M1 <- dB_getGEOtop(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/M1", station = "M1", mkreg = T, aggr_time = "h", file.name = "meteoM1.txt",
header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/header_M1.txt")
library(DataBaseAlpEnvEURAC)
header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/header_M1.txt")
M1 <- dB_getGEOtop(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/M1", station = "M1", mkreg = TRUE, aggr_time = "h", file.name = "meteoM1.txt",
header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/header_M1.txt")
M1 <- dB_getGEOtop(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/M1", station = "M1", mkreg = FALSE, aggr_time = "h", file.name = "meteoM1.txt",
header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/header_M1.txt")
data <- M!
data <- M1
g <- zoo(x = NA, seq(head(index(data),1),tail(index(data),1),by=1/24/4))
library(zoo)
?zoo
g <- zoo(x = NA, seq(head(index(data),1),tail(index(data),1),by=1/24/4))
length(data)
dim(data)
dim(data)[2]
data <- merge(data,g)[,1:dim(data)[2]]
str(data)
plot(data)
names(data)
data<-M1
g <- zoo(x = NA, seq(head(index(data),1),tail(index(data),1),by=1/24/4))
data <- merge(data,g)
str(data)
View(data)
detach("package:DataBaseAlpEnvEURAC", unload=TRUE)
remove.packages("DataBaseAlpEnvEURAC", lib="~/R/x86_64-pc-linux-gnu-library/3.2")
library(devtools)
install_github("JBrenn/DataBaseAlpEnvEURAC")
library(DataBaseAlpEnvEURAC)
M1 <- dB_getGEOtop(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/M1", station = "M1", mkreg = TRUE, aggr_time = "h", file.name = "meteoM1.txt",
header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/header_M1.txt")
str(M1)
plot(M1[,8])
plot(M1[,7])
is.regular(M1)
library(zoo)
is.regular(M1)
detach("package:DataBaseAlpEnvEURAC", unload=TRUE)
remove.packages("DataBaseAlpEnvEURAC", lib="~/R/x86_64-pc-linux-gnu-library/3.2")
library(devtools)
install_github("JBrenn/DataBaseAlpEnvEURAC")
library(DataBaseAlpEnvEURAC)
M1 <- dB_getGEOtop(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/M1", station = "M1", aggr_time = "h", file.name = "meteoM1.txt",
header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/header_M1.txt")
str(M1)
plot(M1)
M2 <- dB_getGEOtop(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/M1", station = "M2", aggr_time = "h", file.name = "meteoM2.txt",
header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/header_M2.txt")
str(M2)
plot(M2)
plot(M2[,5])
plot(M2[,5], ylim=c(0,100))
plot(M2[,6], ylim=c(-30,30))
M3 <- dB_getGEOtop(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/M1", station = "M3", aggr_time = "h", file.name = "meteoM3.txt",
header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/header_M3.txt")
plot(M3)
M2 <- dB_getGEOtop(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/M2", station = "M2", aggr_time = "h", file.name = "meteoM2.txt",
header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/header_M2.txt")
M3 <- dB_getGEOtop(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/M3", station = "M3", aggr_time = "h", file.name = "meteoM3.txt",
header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/header_M3.txt")
plot(M3)
M4 <- dB_getGEOtop(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/M4", station = "M4", aggr_time = "h", file.name = "meteoM3.txt",
header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/header_M4.txt")
plot(M4)
plot(M4[,2], ylim=c(0,50))
plot(M4[,2], ylim=c(0,15))
M5 <- dB_getGEOtop(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/M5", station = "M5", aggr_time = "h", file.name = "meteoM3.txt",
header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/header_M5.txt")
plot(M5)
M6 <- dB_getGEOtop(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/M6", station = "M6", aggr_time = "h", file.name = "meteoM3.txt",
header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/header_M6.txt")
plot(M6)
M7 <- dB_getGEOtop(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/M7", station = "M7", aggr_time = "h", file.name = "meteoM3.txt",
header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/header_M7.txt")
M7 <- dB_getGEOtop(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/M7", station = "M7", aggr_time = "h", file.name = "meteoM7.txt",
header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/M/header_M7.txt")
B1 <- dB_getGEOtop(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/B/B1",
station = "B1", aggr_time = "h", file.name = "meteoB1.txt",
header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/B/header_B1.txt")
B2 <- dB_getGEOtop(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/B/B2",
station = "B1", aggr_time = "h", file.name = "meteoB2.txt",
header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/B/header_B2.txt")
B3 <- dB_getGEOtop(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/B/B3",
station = "B1", aggr_time = "h", file.name = "meteoB3.txt",
header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/B/header_B3.txt")
plot(B3
)
S2 <- dB_getGEOtop(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/S/S2", station = "S2", aggr_time = "h", file.name = "meteoS2.txt",
header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/S/header_S2.txt")
S2 <- dB_getGEOtop(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/S/S2", station = "S2", aggr_time = "h", file.name = "meteoS2.txt",
header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/S/header_S.txt")
plot(S2)
S3 <- dB_getGEOtop(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/S/S3", station = "S3", aggr_time = "h", file.name = "meteoS3.txt",
header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/S/header_S.txt")
S4 <- dB_getGEOtop(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/S/S4", station = "S4", aggr_time = "h", file.name = "meteoS4.txt",
header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/S/header_S.txt")
plot(S4
)
tail(S4)
S5 <- dB_getGEOtop(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/S/S5", station = "S5", aggr_time = "h", file.name = "meteoS5.txt",
header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/S/header_S.txt")
library("DataBaseAlpEnvEURAC", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
remove.packages("DataBaseAlpEnvEURAC", lib="~/R/x86_64-pc-linux-gnu-library/3.2")
