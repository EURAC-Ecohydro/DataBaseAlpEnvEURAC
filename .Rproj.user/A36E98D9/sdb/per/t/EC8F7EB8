{
    "contents" : "# function read station data\n\n#ARGUMENTS\n# path        path to data files\n# header.file path and name headerfile\n# station    \n#e.g.\n#path <- \"H:/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/B/B1/\"\n#header.file <- \"H:/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/B/header_B1.txt\"\n\ndB_readStationData <- function(path, header.file, station)\n{\n# load libraries\n#  require(zoo)\n#  require(chron)\n  \n# supress chron year abbreviation  \n  options(chron.year.abb = FALSE)\n  \n# get header\n  header <- as.character(read.table(header.file, header=FALSE)[,1])\n  \n# get file names  \n  files <- dir(path)\n\n  station_gen <- substr(station,1,nchar(station)-1)\n\n  if (station_gen==\"B\") {\n    skip <- 4; date_col=1; tz=\"Etc/GMT-2\"\n  }\n  if (station_gen==\"P\"| station_gen==\"I\") {\n    skip <- 4; date_col=1; tz=\"Etc/GMT-1\"\n  }\n  if (station_gen==\"M\" | station_gen==\"S\") {\n    skip <- 1; date_col=2; tz=\"Etc/GMT+1\"\n  }\n  if (station==\"S2\") {\n    skip <- 1; date_col=2; tz=\"Etc/GMT+2\"\n  }\n \n# read data \n  data <- rep(NA,length(header))\n  datetime <- chron(dates.  = \"2012-02-02\", times. = \"01:00:00\", \n                    format= c(dates = \"y-m-d\", times = \"h:m:s\"))\n\n# do not work with POSIX as timezone is needed, better solution chron\n#datetime <- as.POSIXct(strptime(x=\"2012-02-02 00:00\", format=\"%Y-%m-%d %H:%M\", tz=tz))\n\n  for (i in files)\n  {\n    # whole data frame\n    if (i==\"B3_2000_YEAR_2014.csv\" | i==\"B3_2000_YEAR_2015.csv\") {\n      dummy <- read.csv(file.path(path,i), skip=skip, header=FALSE, dec=\".\",\n                         na.strings=c(\"NaN\",\"7777\",\"-888.88\",\"-999\", \"NAN\"))\n      dummy <- dummy[,1:dim(data)[2]]\n    } else {\n      if (i==\"B3_2000_YEAR_2010.csv\" | i==\"B3_2000_YEAR_2012.csv\") {\n        dummy <- read.csv2(file.path(path,i), skip=skip, header=FALSE, \n                           na.strings=c(\"NaN\",\"7777\",\"-888.88\",\"-999\", \"NAN\"))\n        \n      } else {\n        if (i==\"I1_YEAR_2014.csv\") {\n          dummy <- read.csv(file.path(path,i), skip=skip, header=FALSE, \n                            na.strings=c(\"NaN\",\"7777\",\"-888.88\", \"-999\", \"NAN\"))\n          dummy <- dummy[,-1]\n          names(dummy) <- paste(\"V\", 1:length(dummy), sep=\"\")\n        } else {\n          if (i==\"M1_total_2014.csv\" | i==\"P3_YEAR_2015.csv\") {\n            dummy <- read.csv(file.path(path,i), skip=skip, header=FALSE, \n                              na.strings=c(\"NaN\",\"7777\",\"-888.88\", \"-999\", \"NAN\"))\n            dummy <- dummy[,1:dim(data)[2]]  \n          } else {\n            dummy <- read.csv(file.path(path,i), skip=skip, header=FALSE, \n                              na.strings=c(\"NaN\",\"7777\",\"-888.88\", \"-999\", \"NAN\"))\n          }  \n          \n       \n        }\n        \n      }\n    }\n \n    data <- rbind(data,dummy)\n    \n    # extract date and time\n    \n  # differing datetime formats\n    # \"%Y-%m-%d %H:%M:%S\"\n    if (substr(as.character(dummy[1,date_col]),5,5)==\"-\" & nchar(as.character(dummy[1,date_col]))==19)\n      datetime <- c(datetime,\n                    chron(dates.  = substr(dummy[,date_col],1,10), \n                          times. = substr(dummy[,date_col],12,19), \n                          format= c(dates = \"y-m-d\", times = \"h:m:s\")))\n#as.POSIXct(strptime(x=dummy[,date_col], format=\"%Y-%m-%d %H:%M\", tz=tz)) )\n    # \"%Y-%m-%d %H:%M\"\n    if (substr(as.character(dummy[1,date_col]),5,5)==\"-\" & nchar(as.character(dummy[1,date_col]))==16)\n      datetime <- c(datetime,\n                    chron(dates.  = substr(dummy[,date_col],1,10), \n                          times. = paste(substr(dummy[,date_col],12,16),\"00\",sep=\":\"), \n                          format= c(dates = \"y-m-d\", times = \"h:m:s\")))\n#as.POSIXct(strptime(x=dummy[,date_col], format=\"%Y-%m-%d %H:%M\", tz=tz) ))\n    # \"%Y/%m/%d %H:%M\"\n    if (substr(as.character(dummy[1,date_col]),3,3)==\"/\" & nchar(as.character(dummy[1,date_col]))==16)\n      datetime <- c(datetime,\n                    chron(dates.  = substr(dummy[,date_col],1,10), \n                          times. = paste(substr(dummy[,date_col],12,16),\"00\",sep=\":\"), \n                          format= c(dates = \"d/m/y\", times = \"h:m:s\"),\n                          out.format = c(dates = \"y-m-d\", times = \"h:m:s\")))\n#as.POSIXct(strptime(x=dummy[,date_col], format=\"%d/%m/%Y %H:%M\", tz=tz) ))\n    # \"%Y/%m/%d %H:%M:%S\"\n    if (substr(as.character(dummy[1,date_col]),3,3)==\"/\" & nchar(as.character(dummy[1,date_col]))==19)\n      datetime <- c(datetime,\n                    chron(dates.  = substr(dummy[,date_col],1,10), \n                          times. = substr(dummy[,date_col],12,19), \n                          format= c(dates = \"d/m/y\", times = \"h:m:s\"),\n                          out.format = c(dates = \"y-m-d\", times = \"h:m:s\")))\n#as.POSIXct(strptime(x=dummy[,date_col], format=\"%d/%m/%Y %H:%M\", tz=tz)) )\n    \n    if (substr(as.character(dummy[1,date_col]),3,3)==\".\" & nchar(as.character(dummy[1,date_col]))==16)\n      datetime <- c(datetime,\n                    chron(dates.  = substr(dummy[,date_col],1,10), \n                          times. = paste(substr(dummy[,date_col],12,16),\"00\",sep=\":\"), \n                          format= c(dates = \"d.m.y\", times = \"h:m:s\"),\n                          out.format = c(dates = \"y-m-d\", times = \"h:m:s\")))\n#as.POSIXct(strptime(x=dummy[,date_col], format=\"%d.%m.%Y %H:%M\", tz=tz) ))\n    if (substr(as.character(dummy[1,date_col]),3,3)==\".\" & nchar(as.character(dummy[1,date_col]))==19)\n      datetime <- c(datetime,\n                    chron(dates.  = substr(dummy[,date_col],1,10), \n                          times. = substr(dummy[,date_col],12,19), \n                          format= c(dates = \"d.m.y\", times = \"h:m:s\"),\n                          out.format = c(dates = \"y-m-d\", times = \"h:m:s\")))\n#as.POSIXct(strptime(x=dummy[,date_col], format=\"%d.%m.%Y %H:%M\", tz=tz)) )\n  }\n  \n  datetime <- datetime[-1]\n  data <- data[-1,-c(1:date_col)]\n\n  # create zoo object\n  zoo.data <- zoo(x=data, order.by=datetime)\n  names(zoo.data) <- header[-c(1:date_col)]\n  \n  return(zoo.data)\n}",
    "created" : 1427477474969.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1371268076",
    "id" : "EC8F7EB8",
    "lastKnownWriteTime" : 1427477671,
    "path" : "~/GitHub/DataBaseAlpEnvEURAC/R/dB_readStationData.R",
    "project_path" : "R/dB_readStationData.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}