{
    "contents" : "# AUTHOR: Johannes Brenner, Institute for Alpine Environments\n# DATE.VERSION: 19.08.2014 V1\n\n# PURPOSE\n# read ZRX data files (province Bozen, WISKI, batch download) with function readZRX\n# general quality check | min - max variable dependent\n# & hourly aggregation (mean - sum) possible\n# AND\n# return .csv file for each station with available variables\n\n# required libraries: zoo\n# required source:    readZRX.R\n\n# ARGUMENTS\n# files       ZRX file names (absolute paths)\n# write.csv   logical, if TRUE .csv files for each station are written\n# output_path path to which .csv files are writte\n# do.hourly   logical, if TRUE data gets hourly aggregated\n# do.quality  logical, if FALSE general quality check is performed (min - max)\n\n# VALUES\n# output .csv files containing available variables for each station\n# list containing zoo objects for each station\n\ndB_readZRX2station <- function(files, write_csv, output_path, do.hourly, do.quality, chron)\n  \n  {\n    # source function readZRX\n    #source(\"readZRX\")\n  \n    # dummies for station names, data and meta data\n    stnames <- c()\n    out_data <- list()\n    out_metadata <- list()\n    \n    # read data via loop over files\n    for (i in files)\n    {\n      out  <- dB_readZRX(i, do.hourly = do.hourly, do.quality = do.quality, chron = FALSE)\n      out_data[[substr(i,1,nchar(i)-4)]] <- out[[1]]\n      out_metadata[[substr(i,1,nchar(i)-4)]] <- out[[2]]\n      stnames <- c(stnames, names(out_data[[substr(i,1,nchar(i)-4)]]))\n    }\n  \n    # get unique station IDs\n    stations <- unique(stnames)\n    \n    # preperation for dummy with minimal time frame \n    t <- lapply(X = out_data, FUN = function(x){\n      lapply(X = x, FUN = function(x){\n        diff(range(time(x)))\n      })\n    })\n    t <- lapply(t, unlist)\n    min1 <- lapply(t, which.min)\n    min2 <- which.min(unlist(lapply(t, which.min)))\n    \n    # dummy for station data\n    station_data <- list()\n    \n      # loop over unique station vector\n      for (i in stations)\n      {\n        # dummy for specific station and variable available for this station\n        dummy <- zoo(NA, time(out_data[[min2]][[min1[[min2]]]]))\n        name_spec <- c()\n        \n        # loop over variables\n        for (dat in names(out_data))\n        {\n          #get meta data for variable dat\n          metadata <- out_metadata[[dat]]\n          \n          #get data for variable dat and station i\n          data <- out_data[[dat]]\n          \n          if ( any(names(data)==i) ){\n            st_data <- data[[i]]\n           \n            dummy <- merge(dummy, st_data)\n            name_spec <- c(name_spec, TRUE)\n          } else {\n            name_spec <- c(name_spec, FALSE)\n          }\n        }\n        dummy <- dummy[,-1]\n        \n        # name coloums of zoo object\n        names(dummy) <- names(out_data)[name_spec]\n        \n        # write .csv file containing station data\n        if (write_csv)\n        {\n          #STinMetadata <- which(substr(i,3,nchar(i))==metadata[,\"st_id\"])\n          if (do.hourly==T){\n            output_filename <- paste(i, \"60\", sep=\"_\")\n          } else {\n            output_filename <- paste(i, unique(metadata[,\"time_agg\"]), sep=\"_\")\n          }\n          write.zoo( x = dummy, file = file.path(output_path, paste(output_filename,\".csv\",sep=\"\")), \n                     row.names=F, col.names=T, sep=\",\", quote=F, index.name=\"date\")\n        }\n        \n        # save data in station data list\n        station_data[[i]] <- dummy\n      }\n      \n    # return function output\n    return(station_data)\n\n  }\n",
    "created" : 1424966130546.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "689215420",
    "id" : "70F626A0",
    "lastKnownWriteTime" : 1425055170,
    "path" : "~/GitHub/DataBaseAlpEnvEURAC/R/dB_readZRX2station.R",
    "project_path" : "R/dB_readZRX2station.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}